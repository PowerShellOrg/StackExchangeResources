# Notes:
#   - Minimal appveyor.yml file is an empty file. All sections are optional.
#   - Indent each level of configuration with 2 spaces. Do not use tabs!
#   - All section names are case-sensitive.
#   - Section names should be unique on each level.

#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: 1.0.{build}

# Do not build on tags (GitHub only)
skip_tags: false

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Operating system (build VM template)
os: Windows Server 2012 R2

#---------------------------------#
#       build configuration       #
#---------------------------------#

install: 
  ps: |
    $OneGetZipPath = join-path $pwd 'oneget.zip'
    $OneGetProgramFilesLocation = join-path $env:programfiles 'windowspowershell/modules/oneget'
    if (-not (test-path $OneGetProgramFilesLocation)) {mkdir $OneGetProgramFilesLocation | out-null}
    (new-object net.webclient).downloadfile('http://oneget.org/oneget.zip', $OneGetZipPath)
    $shell = new-object -com shell.application
    $zip = $shell.NameSpace($OneGetZipPath)
    foreach($item in $zip.items())
    {
      $shell.Namespace($OneGetProgramFilesLocation).copyhere($item)
    }
    find-package pester | out-null
    install-module pester

# to run your custom scripts instead of automatic MSBuild
#build_script:
#  - ps: 

# to disable automatic builds
build: off

#---------------------------------#
#       tests configuration       #
#---------------------------------#

# to run your custom scripts instead of automatic tests
test_script: 
  ps: |
      if (test-path ./test/unit) {
        Invoke-Pester -path ./test/unit -EnableExit
      }
      else {
        Write-Host "No tests found under $(join-path $pwd '/test/unit')"
      }

# to disable automatic tests 
#test: off

#---------------------------------#
#     deployment configuration    #
#---------------------------------#

# to run your custom scripts instead of provider deployments
#deploy_script:

# to disable deployment
deploy: off